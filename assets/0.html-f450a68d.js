import{_ as n,W as s,X as a,$ as t,a2 as p}from"./framework-90c572f7.js";const e={},o=p(`<h2 id="checknodeversion" tabindex="-1"><a class="header-anchor" href="#checknodeversion" aria-hidden="true">#</a> checkNodeVersion</h2><blockquote><p>期望使用的 NodeJS 版本检查</p></blockquote><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> semver <span class="token keyword">from</span> <span class="token string">&quot;semver&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> chalk <span class="token keyword">from</span> <span class="token string">&quot;chalk&quot;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 期望使用的 NodeJS 版本检查
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>string | semver.Range<span class="token punctuation">}</span> range 
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>string<span class="token punctuation">}</span> packageName 
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>boolean<span class="token punctuation">}</span> optionsOrLoose 
 * <span class="token keyword">@return</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">checkNodeVersion</span><span class="token punctuation">(</span>range<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> semver<span class="token punctuation">.</span>Range<span class="token punctuation">,</span> packageName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> optionsOrLoose<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> semver<span class="token punctuation">.</span>RangeOptions <span class="token operator">=</span> <span class="token punctuation">{</span> includePrerelease<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>semver<span class="token punctuation">.</span><span class="token function">satisfies</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>version<span class="token punctuation">,</span> range<span class="token punctuation">,</span> optionsOrLoose<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>chalk<span class="token punctuation">.</span><span class="token function">red</span><span class="token punctuation">(</span>
            <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">You are using Node </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>process<span class="token punctuation">.</span>version<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, but this version of </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>packageName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> requires Node </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>range<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.

Please upgrade your Node version.</span><span class="token template-punctuation string">\`</span></span>
        <span class="token punctuation">)</span><span class="token punctuation">)</span>
        process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="suggestcommands" tabindex="-1"><a class="header-anchor" href="#suggestcommands" aria-hidden="true">#</a> suggestCommands</h2><blockquote><p>未知命令的推荐(错误命令,猜测用户意图)</p></blockquote><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> chalk <span class="token keyword">from</span> <span class="token string">&quot;chalk&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Command <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;commander&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> leven <span class="token keyword">from</span> <span class="token string">&quot;leven&quot;</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 未知命令的推荐(错误命令,猜测用户意图)
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>Command<span class="token punctuation">}</span> program
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>string<span class="token punctuation">}</span> unknownCommand
 * <span class="token keyword">@return</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">suggestCommands</span><span class="token punctuation">(</span>program<span class="token operator">:</span> Command<span class="token punctuation">,</span> unknownCommand<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> availableCommands <span class="token operator">=</span> program<span class="token punctuation">.</span>commands<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>cmd <span class="token operator">=&gt;</span> cmd<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">let</span> suggestion<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
    availableCommands<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>cmd <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> isBestMatch <span class="token operator">=</span> <span class="token function">leven</span><span class="token punctuation">(</span>cmd<span class="token punctuation">,</span> unknownCommand<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token function">leven</span><span class="token punctuation">(</span>suggestion <span class="token operator">||</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> unknownCommand<span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">leven</span><span class="token punctuation">(</span>cmd<span class="token punctuation">,</span> unknownCommand<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">3</span> <span class="token operator">&amp;&amp;</span> isBestMatch<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            suggestion <span class="token operator">=</span> cmd
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>suggestion<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">  </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span> chalk<span class="token punctuation">.</span><span class="token function">red</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Did you mean </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>chalk<span class="token punctuation">.</span><span class="token function">yellow</span><span class="token punctuation">(</span>suggestion<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">?</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="resolvepkg" tabindex="-1"><a class="header-anchor" href="#resolvepkg" aria-hidden="true">#</a> resolvePkg</h2><blockquote><p>读取指定目录下 package.json 文件</p></blockquote><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> fs <span class="token keyword">from</span> <span class="token string">&quot;fs-extra&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> path <span class="token keyword">from</span> <span class="token string">&quot;path&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> readPackageSync <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;read-pkg&quot;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 读取指定目录下 package.json 文件
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>string<span class="token punctuation">}</span> dir 路径
 * <span class="token keyword">@return</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">resolvePkg</span><span class="token punctuation">(</span>dir<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>dir<span class="token punctuation">,</span> <span class="token string">&#39;package.json&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">readPackageSync</span><span class="token punctuation">(</span><span class="token punctuation">{</span> cwd<span class="token operator">:</span> dir <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="writefiletree" tabindex="-1"><a class="header-anchor" href="#writefiletree" aria-hidden="true">#</a> writeFileTree</h2><blockquote><p>将内存中内容写入文件</p></blockquote><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> fs <span class="token keyword">from</span> <span class="token string">&quot;fs-extra&quot;</span>
<span class="token keyword">import</span> path <span class="token keyword">from</span> <span class="token string">&quot;path&quot;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 写文件
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>string<span class="token punctuation">}</span> dir
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>Record<span class="token punctuation">}</span> files
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span> string
 * <span class="token keyword">@return</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">writeFileTree</span><span class="token punctuation">(</span>dir<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> files<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">string</span> <span class="token operator">|</span> NodeJS<span class="token punctuation">.</span>ArrayBufferView<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> filePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>dir<span class="token punctuation">,</span> name<span class="token punctuation">)</span>
        <span class="token comment">// 确认需写入的文件存在,不存在直接新建</span>
        fs<span class="token punctuation">.</span><span class="token function">ensureDirSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">dirname</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">)</span>
        fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> files<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12);function c(i,l){return s(),a("div",null,[t(`
 * @description: CLI
 * @Author: ChengBotao
 * @Date: 2023-03-29 19:37:47
`),o])}const r=n(e,[["render",c],["__file","0.html.vue"]]);export{r as default};
