import{_ as a,r as o,o as i,c,a as d,b as n,d as s,w as e,e as u,f as l}from"./app.2c890e59.js";const r={},p=u(`<p><img src="https://img.shields.io/github/languages/code-size/chengbotao/billows" alt="GitHub code size in bytes"><img src="https://img.shields.io/github/license/chengbotao/billows" alt="GitHub"><img src="https://img.shields.io/github/stars/chengbotao/billows" alt="GitHub Repo stars"></p><h1 id="billows" tabindex="-1"><a class="header-anchor" href="#billows" aria-hidden="true">#</a> Billows</h1><p><strong>常用的工具函数集合</strong></p><h2 id="install" tabindex="-1"><a class="header-anchor" href="#install" aria-hidden="true">#</a> Install</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> billows
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 全量引入</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> billows <span class="token keyword">from</span> <span class="token string">&quot;billows&quot;</span><span class="token punctuation">;</span>
billows<span class="token punctuation">.</span><span class="token function">typeOf</span><span class="token punctuation">(</span><span class="token string">&quot;chengbotao&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;string&quot;</span>

<span class="token comment">// 差量使用</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> typeOf <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;billows&quot;</span><span class="token punctuation">;</span>
<span class="token function">typeOf</span><span class="token punctuation">(</span><span class="token string">&quot;chengbotao&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;string&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),h=n("thead",null,[n("tr",null,[n("th",null,"函数名"),n("th",null,"说明")])],-1),_=n("code",null,"typeOf",-1),m=n("td",null,"返回变量类型",-1),b=n("code",null,"instanceOf",-1),f=n("td",null,[l("检测构造函数的 "),n("code",null,"prototype"),l(" 属性是否出现在某个实例对象的原型链上")],-1),g=n("code",null,"setValueByReference",-1),k=n("td",null,"通过引用设置值的函数",-1),w=n("code",null,"getValueByReference",-1),v=n("td",null,"通过引用获取值的函数",-1),y=n("code",null,"deepClone",-1),q=n("td",null,"深拷贝函数",-1),x=n("code",null,"treeToFlat",-1),T=n("td",null,"树结构转扁平化结构",-1),V=n("code",null,"partial",-1),B=n("td",null,"偏函数",-1),N=n("code",null,"getNodeFromTree",-1),O=n("td",null,"根据唯一标志从树结构中获取节点",-1),R=n("code",null,"flatToTree",-1),C=n("td",null,"扁平化转结构转树结构",-1),F=n("code",null,"curry",-1),G=n("td",null,"函数柯里化",-1);function H(z,L){const t=o("RouterLink");return i(),c("div",null,[d(`
 * @Author: Chengbotao
 * @Date: 2022-06-15 09:11:17
`),p,n("table",null,[h,n("tbody",null,[n("tr",null,[n("td",null,[s(t,{to:"/billows/typeOf.html"},{default:e(()=>[_]),_:1})]),m]),n("tr",null,[n("td",null,[s(t,{to:"/billows/instanceOf.html"},{default:e(()=>[b]),_:1})]),f]),n("tr",null,[n("td",null,[s(t,{to:"/billows/setValueByReference.html"},{default:e(()=>[g]),_:1})]),k]),n("tr",null,[n("td",null,[s(t,{to:"/billows/getValueByReference.html"},{default:e(()=>[w]),_:1})]),v]),n("tr",null,[n("td",null,[s(t,{to:"/billows/deepClone.html"},{default:e(()=>[y]),_:1})]),q]),n("tr",null,[n("td",null,[s(t,{to:"/billows/treeToFlat.html"},{default:e(()=>[x]),_:1})]),T]),n("tr",null,[n("td",null,[s(t,{to:"/billows/partial.html"},{default:e(()=>[V]),_:1})]),B]),n("tr",null,[n("td",null,[s(t,{to:"/billows/getNodeFromTree.html"},{default:e(()=>[N]),_:1})]),O]),n("tr",null,[n("td",null,[s(t,{to:"/billows/flatToTree.html"},{default:e(()=>[R]),_:1})]),C]),n("tr",null,[n("td",null,[s(t,{to:"/billows/curry.html"},{default:e(()=>[F]),_:1})]),G])])])])}const D=a(r,[["render",H],["__file","index.html.vue"]]);export{D as default};
